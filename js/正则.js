/***************************************************************正则匹配****str.match(r)***********************************************************/
str =
  "【解析】根据文中的句子'1.The paint-tool is a popular choice for easy and even paint application.'可以推断出，paint marking tools有助于实现均匀的上色。"

// 只保留 -->
//    大小写字母(a-zA-Z)、数字(\d)、空白字符(\s)、逗号(,)、句号(.)、单引号(')、双引号(")、横杠(-)、前面的出现1到无数次(+)
const matches = (str?.match(/([a-zA-Z\d\s,.'"-]+)/g) ?? [])
  .map((s) => s.trim()) // 去空格
  .map((s) => s.replace(/^'(.*?)/, '$1')) // 去掉最前面的单引号
  .map((s) => s.replace(/^"(.*?)/, '$1')) // 去掉最前面的双引号
  .map((s) => s.replace(/(.*?)'$/, '$1')) // 去掉最后面的单引号
  .map((s) => s.replace(/(.*?)"$/, '$1')) // 去掉最前面的双引号
  .filter((s) => Boolean(s))

console.log('1-> ', matches)

/***************************************************************正则判断****r.test(str)***********************************************************/
//1、国内手机号都是1开头
//2、开头一般是:13,14,15,17,18,所以第二个数字是3,4,5,7,8,用中括号就可以限制用哪些字符
//3、接下来都是0——9的数字,打括号表示重复的次数
let r1 = /^1[34578]\d{9}$/
console.log('2-> ', r1.test('18819302751')) //输出 true

//1、邮箱开头包含所有大小写字母,数字和_-.这三个字符 ,-表中括号内的范围,.这个字符在正则表示任意字符,要用\来转义,,所以结果:A-Za-z0-9_\-\.
//2、A-Za-z]{2,4}表示.com 或.cn 2~4个字母组成
let r2 = /^([A-Za-z0-9_\-\.])+@([A-Za-z0-9_\-.])+.([A-Za-z]{2,4})$/
console.log('3-> ', r2.test('-99154507@qq.com')) //输出 true

//1、第一个数字是1~9,[]选定指定的数字,也可在[]内用—来表示数字范围, =>/^[1-9]/
//2、第二个后是0~9数字,QQ最多5位,最少10位数,只取4~9个=>/[0-9]{4,9}$/
var s = '1271024201'
var r = /^[1-9][0-9]{4,9}$/
var a = s.match(r)
console.log('4-> ', a)

/***************************************************************正则符号***********************************************************/
// 符号{n}:    连续出现n次
// 符号{n,m}:  连续出现n到m次
// 符号{n,}:   连续出现n到无数次
// 符号g:      拿到匹配条件的全部结果
var reg = /\d{3}/g
var str = '1wr35qt891pp000'
console.log('5-> ', str.match(reg))

// 符号i：     忽略大小写
console.log('6-> ', /[a-z]/i.test('qweQWE')) // true

/***************************************************************replace***********************************************************/
let str1 = '<p class="indent-2 style"><span style="font-family:KaiTi;">③今天，<p class="some-class">';  

// 找到第一个p标签将class为indent-\d的属性拿掉
let res = str1.replace(/^<p[^<>]+class="([^"])+/g, el => {
  return el.replace(/indent-\d+/g, '')
});  
console.log(res);